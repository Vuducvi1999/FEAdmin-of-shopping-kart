{"version":3,"sources":["webpack:///src/app/components/customers/customer-details/customer-details.component.ts","webpack:///src/app/components/customers/customer-details/customer-details.component.html","webpack:///src/app/components/customers/customers.module.ts","webpack:///src/app/components/customers/list-customers/list-customers.component.ts","webpack:///src/app/components/customers/list-customers/list-customers.component.html","webpack:///src/app/components/customers/customers-routing.module.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"names":["CustomerDetailsComponent","formBuilder","customerService","ngbActiveModal","messageService","submitted","modalFile","typeFile","IMAGE","multiBoolen","enityType","USER","loadItem","item","fileURL","push","imageUrl","usersForm","group","username","required","password","email","firstName","lastName","address","phone","modalHeader","title","modalFooter","controls","invalid","user","value","id","files","listFile","callServiceToSave","save","then","notification","SUCCESS","close","er","alert","error","message","JSON","stringify","ERROR","event","dismiss","add","remove","forEach","e","i","includes","splice","removeAll","setValue","join","onChangeData","selector","templateUrl","styleUrls","providers","CustomerModule","declarations","imports","ListCustomersComponent","modalService","closeResult","params","settings","mode","actions","position","columns","type","renderComponent","getList","category","data","confirm","it","isConfirmed","modalRef","open","size","componentInstance","result","get","res","hasError","customers","results","pageIndex","openPopup","routes","path","children","component","breadcrumb","CustomerRoutingModule","forChild","exports","CustomViewCellStringComponent","rowData"],"mappings":"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","file":"components-customers-customers-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomerModel, TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { CustomerService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport {\r\n  ModalHeaderModel,\r\n  ModalFooterModel,\r\n  ModalFile,\r\n  TypeFile,\r\n  EntityType,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n\r\n@Component({\r\n  selector: 'app-customer-details',\r\n  templateUrl: './customer-details.component.html',\r\n  styleUrls: ['./customer-details.component.scss'],\r\n  providers: [CustomerService],\r\n})\r\nexport class CustomerDetailsComponent implements OnInit {\r\n  public usersForm: FormGroup;\r\n  public permissionForm: FormGroup;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public user: CustomerModel;\r\n  @Input() item: CustomerModel;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n\r\n  submitted = false;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private customerService: CustomerService,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.USER;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItem();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.fileURL.push(this.item.imageUrl);\r\n    }\r\n  }\r\n\r\n  loadItem() {\r\n    this.usersForm = this.formBuilder.group({\r\n      username: [this.item ? this.item.username : '', [Validators.required]],\r\n      password: [this.item ? this.item.password : '', [Validators.required]],\r\n      email: [\r\n        this.item ? this.item.email : '',\r\n        [Validators.required, Validators.email],\r\n      ],\r\n      firstName: [this.item ? this.item.firstName : '', [Validators.required]],\r\n      lastName: [this.item ? this.item.lastName : '', [Validators.required]],\r\n      imageUrl: [this.item ? this.item.imageUrl : ''],\r\n      address: [this.item ? this.item.address : ''],\r\n      phone: [this.item ? this.item.phone : ''],\r\n    });\r\n\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = this.item ? `Update ${this.item.username}` : `Add`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n  get f() {\r\n    return this.usersForm.controls;\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.usersForm.invalid) {\r\n      // console.log(this.usersForm);\r\n      return;\r\n    }\r\n\r\n    this.user = {\r\n      username: this.usersForm.value.username,\r\n      password: this.usersForm.value.password,\r\n      email: this.usersForm.value.email,\r\n      firstName: this.usersForm.value.firstName,\r\n      lastName: this.usersForm.value.lastName,\r\n      imageUrl: this.usersForm.value.imageUrl,\r\n      id: this.item ? this.item.id : '',\r\n      files: this.modalFile.listFile,\r\n      address: this.usersForm.value.address,\r\n      phone: this.usersForm.value.phone,\r\n    };\r\n\r\n    this.callServiceToSave();\r\n  }\r\n\r\n  callServiceToSave() {\r\n    this.customerService\r\n      .save(this.user)\r\n      .then(() => {\r\n        this.messageService.notification(\r\n          this.item ? 'Profile has been updated' : 'Profile has been created',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.usersForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"usersForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Customer Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Username</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"username\"\r\n                  autocomplete=\"username\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.username.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.username.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.username.errors.required\">\r\n                    Username is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\" *ngIf=\"!item\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Password</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"password\"\r\n                  formControlName=\"password\"\r\n                  autocomplete=\"new-password\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.password.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.password.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.password.errors.required\">\r\n                    Password is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  <span>*</span> FirstName</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"firstName\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.firstName.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.firstName.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.firstName.errors.required\">\r\n                    FirstName is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  <span>*</span> LastName</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"lastName\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.lastName.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.lastName.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.lastName.errors.required\">\r\n                    LastName is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  <span>*</span> Email</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.email.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.email.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                  <div *ngIf=\"f.email.errors.email\">Wrong type email</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Address</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"address\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.address.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.address.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.address.errors.required\">\r\n                    Address is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Phone</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"phone\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.phone.errors\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"submitted && f.phone.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.phone.errors.required\">Phone is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"imageUrl\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && f.imageUrl.errors\r\n                  }\"\r\n                  hidden\r\n                />\r\n\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && f.imageUrl.errors\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div *ngIf=\"f.imageUrl.errors.required\">\r\n                    Image is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer [data]=\"modalFooter\" (onAction)=\"save()\"></app-modal-footer>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\r\nimport { CustomerRoutingModule } from './customers-routing.module';\r\nimport { ListCustomersComponent } from './list-customers/list-customers.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListCustomersComponent,\r\n    CustomerDetailsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CustomerRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    NgbModalModule,\r\n    Ng2SmartTableModule,\r\n    CKEditorModule,\r\n  ],\r\n})\r\nexport class CustomerModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  ReturnMessage,\r\n  PageModel,\r\n  CustomerModel,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { CustomerService, FileService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport { CustomerDetailsComponent } from '../customer-details/customer-details.component';\r\n\r\n@Component({\r\n  selector: 'app-list-customers',\r\n  templateUrl: './list-customers.component.html',\r\n  styleUrls: ['./list-customers.component.scss'],\r\n  providers: [CustomerService],\r\n})\r\nexport class ListCustomersComponent implements OnInit {\r\n  public customers: CustomerModel[];\r\n  closeResult = '';\r\n  public data: PageModel<CustomerModel>;\r\n  params: any = {};\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private customerService: CustomerService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.getList();\r\n  }\r\n  ngOnInit(): void { }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      username: {\r\n        title: 'Username',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      firstName: {\r\n        title: 'First Name',type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      email: {\r\n        title: 'Email',type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      phone: {\r\n        title: 'Phone',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  delete(event: any) {\r\n    let category = event.data as CustomerModel;\r\n      this.messageService.confirm(`Do you want to delete the customer?`, 'Yes').then((it) => {\r\n      if (it.isConfirmed) {\r\n        this.customerService\r\n          .delete(category)\r\n          .then((it: CustomerModel) => {\r\n            this.messageService.notification(\r\n              `Customer has been deleted`,\r\n              TypeSweetAlertIcon.SUCCESS,\r\n            );\r\n            this.getList();\r\n          })\r\n          .catch((er) => {\r\n            this.messageService.notification(\r\n              `Delete Fail`,\r\n              TypeSweetAlertIcon.ERROR,\r\n              er.error.message ??\r\n              JSON.stringify(er.error.error) ??\r\n              'Server Disconnected'\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  openPopup(item: any) {\r\n    var modalRef = this.modalService.open(CustomerDetailsComponent, {\r\n      size: 'lg',\r\n    });\r\n    if (item) modalRef.componentInstance.item = item.data;\r\n\r\n    modalRef.result.then(\r\n      (close) => {\r\n        this.getList();\r\n      },\r\n      (dismiss) => { }\r\n    );\r\n  }\r\n\r\n  getList() {\r\n    this.customerService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<CustomerModel>>) => {\r\n        if (!res.hasError) {\r\n          this.customers = res.data.results;\r\n          this.data = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n          JSON.stringify(er.error.error) ??\r\n          'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getList();\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Customer Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            (edit)=\"openPopup($event)\"\r\n            (create)=\"openPopup(null)\"\r\n            (delete)=\"delete($event)\"\r\n            [(source)]=\"customers\"\r\n          ></ng2-smart-table>\r\n        </div>\r\n      </div>\r\n      <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\r\nimport { ListCustomersComponent } from \"./list-customers/list-customers.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      children: [\r\n        {\r\n          path: 'list-customers',\r\n          component: ListCustomersComponent,\r\n          data: {\r\n            title: \"Customer List\",\r\n            breadcrumb: \"Customer List\"\r\n          }\r\n        },\r\n        {\r\n          path: 'create-customers',\r\n          component: CustomerDetailsComponent,\r\n          data: {\r\n            title: \"Create Customer\",\r\n            breadcrumb: \"Create Customer\"\r\n          }\r\n        },\r\n      ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule { }","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"]}