{"version":3,"sources":["webpack:///src/app/lib/data/services/orders/orders.service.ts","webpack:///src/app/components/orders/list-order/list-orders.component.ts","webpack:///src/app/components/orders/list-order/list-orders.component.html","webpack:///src/app/lib/data/services/orders/order-details.service.ts","webpack:///src/app/components/orders/orders-routing.module.ts","webpack:///src/app/lib/data/models/orders/order.model.ts","webpack:///src/app/components/orders/update-order/update-order.component.html","webpack:///src/app/components/orders/update-order/update-order.component.ts","webpack:///src/app/components/orders/orders.module.ts"],"names":["OrdersService","httpClient","url","request","getObservable","toPromise","status","model","postObservable","putObservable","id","deleteObservable","ListOrdersComponent","modalService","ordersService","datePipe","messageService","filter","params","isGetOrders","settings","mode","actions","position","add","columns","code","title","createByDate","valuePrepareFunction","date","transform","Date","type","renderComponent","fullName","address","phone","email","note","hasCoupon","cell","row","couponName","totalAmount","value","pageIndex","actionFilter","get","then","res","hasError","data","orders","results","forEach","order","couponCode","er","error","console","log","message","event","modalRef","open","size","componentInstance","item","result","getOrders","dismiss","button","innerText","toUpperCase","classList","left","i","remove","getByStatus","response","alert","JSON","stringify","ERROR","openUpdate","selector","templateUrl","styleUrls","providers","OrderDetailsService","routes","path","children","component","breadcrumb","OrdersRoutingModule","forChild","imports","exports","OrderModel","firstName","lastName","totalItem","orderDetails","OrderDetailModel","productName","productId","price","quantity","productImgUrl","UpdateOrderComponent","formBuilder","ngbActiveModal","orderDetailsService","submitted","loadFormItem","createModal","getOrderDetails","check","orderForm","group","disabled","required","modalHeader","modalFooter","buttons","color","onAction","save","approve","reject","controls","loadOrderModel","valid","update","notification","SUCCESS","confirm","isConfirmed","close","fire","input","inputPlaceholder","showCancelButton","confirmButtonText","icon","getByOrder","OrdersModule","declarations"],"mappings":"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","file":"components-orders-orders-module-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClientService } from \"src/app/lib/http/http-client\";\r\nimport { OrderModel } from \"../../models/orders/order.model\";\r\n\r\n\r\n@Injectable()\r\nexport class OrdersService {\r\n\r\n  private url = '/api/order';\r\n\r\n  constructor(private httpClient: HttpClientService) { }\r\n\r\n  get(request: any) {\r\n    return this.httpClient.getObservable(this.url, request).toPromise();\r\n  }\r\n  getDetails(request: any) {\r\n    return this.httpClient.getObservable(this.url+'-detail', request).toPromise();\r\n  }\r\n  getByStatus(request:any,status:string){\r\n    return this.httpClient.getObservable(this.url+'/by-status?status='+status, request).toPromise();\r\n  }\r\n\r\n  create(model:OrderModel) {\r\n    return this.httpClient.postObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  update(model: OrderModel) {\r\n    return this.httpClient.putObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  delete(model: OrderModel) {\r\n    const url = `${this.url}?id=${model?.id}`;\r\n    return this.httpClient.deleteObservable(url).toPromise();\r\n  }\r\n}\r\n\r\n","import { DatePipe } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { CheckboxControlValueAccessor } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport {\r\n  OrderDetailModel,\r\n  OrderModel,\r\n} from 'src/app/lib/data/models/orders/order.model';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { OrdersService } from 'src/app/lib/data/services/orders/orders.service';\r\nimport { CustomViewCellNumberComponent } from 'src/app/shared/components/custom-view-cell-number/custom-view-cell-number.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { UpdateOrderComponent } from '../update-order/update-order.component';\r\n\r\n@Component({\r\n  selector: 'app-list-orders',\r\n  templateUrl: './list-orders.component.html',\r\n  styleUrls: ['./list-orders.component.scss'],\r\n  providers: [OrdersService, DatePipe],\r\n})\r\nexport class ListOrdersComponent implements OnInit {\r\n\r\n  public orders: OrderModel[];\r\n  public filter: string = '';\r\n  params: any = {};\r\n  public data: PageModel<OrderModel>;\r\n\r\n  isGetOrders: boolean = false;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private ordersService: OrdersService,\r\n    private datePipe: DatePipe,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.params.pageIndex = 0;\r\n    // this.getOrders();\r\n  }\r\n  ngOnInit() {\r\n    this.actionFilter('New');\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n      add: false,\r\n      delete: false,\r\n    },\r\n    columns: {\r\n      code: {\r\n        title: 'Code',\r\n      },\r\n      createByDate: {\r\n        filter: false,\r\n        title: 'Created Date',\r\n        valuePrepareFunction: (date) => {\r\n          return this.datePipe.transform(new Date(date), 'dd/MM/yyyy');\r\n        },\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n      fullName: {\r\n        title: 'Full Name',\r\n      },\r\n      address: {\r\n        title: 'Address',\r\n      },\r\n      phone: {\r\n        title: 'Phone',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n      email: {\r\n        title: 'Email',\r\n      },\r\n      status: {\r\n        filter: false,\r\n        title: 'Status',\r\n      },\r\n      note: {\r\n        filter: false,\r\n        title: 'Note',\r\n      },\r\n      hasCoupon: {\r\n        filter: false,\r\n        title: 'Coupon Applied',\r\n        valuePrepareFunction: (cell, row) => {\r\n          return cell ? row.couponName : '';\r\n        },\r\n      },\r\n      totalAmount: {\r\n        filter: false,\r\n        title: 'Total Amount',\r\n        value: 'totalAmount',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellNumberComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  getOrders() {\r\n    this.isGetOrders = false;\r\n    this.ordersService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<OrderModel>>) => {\r\n        if (!res.hasError) {\r\n          this.data = res.data;\r\n          this.orders = res.data.results;\r\n          this.orders.forEach((order) => {\r\n            order.hasCoupon = false;\r\n            if (order.couponCode) {\r\n              order.hasCoupon = true;\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        if (er.error.hasError) {\r\n          console.log(er.error.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  openUpdate(event: any) {\r\n    var modalRef = this.modalService.open(UpdateOrderComponent, {\r\n      size: 'lg',\r\n    });\r\n    modalRef.componentInstance.item = event?.data;\r\n    modalRef.result.then(\r\n      () => this.getOrders(),\r\n      (dismiss) => { }\r\n    );\r\n  }\r\n\r\n  statusFilter(button: HTMLElement) {\r\n    this.isGetOrders = true;\r\n    let status =\r\n      button.innerText.toUpperCase() !== 'All'.toUpperCase()\r\n        ? button.innerText\r\n        : '';\r\n    button.classList.add('active');\r\n\r\n    if (this.filter == status || status == '') {\r\n      this.filter = '';\r\n      this.params.pageIndex = 0;\r\n      return this.getOrders();\r\n    }\r\n    this.filter = status;\r\n\r\n    return this.actionFilter(status);\r\n  }\r\n\r\n  removeAllAction(...left: HTMLElement[]) {\r\n    left.forEach((i) => i.classList.remove('active'));\r\n  }\r\n\r\n  actionFilter(status: string) {\r\n    this.ordersService\r\n      .getByStatus(null, status)\r\n      .then((response) => {\r\n        this.orders = response.data ? response.data : [];\r\n        this.orders.forEach((order) => {\r\n          order.hasCoupon = false;\r\n          if (order.couponCode) {\r\n            order.hasCoupon = true;\r\n          }\r\n        });\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n          JSON.stringify(er.error.error) ??\r\n          'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n        // if (er.error.hasError) {\r\n        //   console.log(er.error.message)\r\n        // }\r\n      });\r\n  }\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getOrders();\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Order Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <h6><strong>Order Status</strong></h6>\r\n      <div class=\"btn-group\" >\r\n        <button\r\n          #allButton\r\n          type=\"button\"\r\n          (click)=\"\r\n            removeAllAction(\r\n              allButton,\r\n              newButton,\r\n              approvedButton,\r\n              rejectedButton\r\n            );\r\n            statusFilter(allButton)\r\n          \"\r\n          class=\"btn btn-primary btn-xs mr-2\"\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          #newButton\r\n          type=\"button\"\r\n          (click)=\"\r\n            removeAllAction(\r\n              allButton,\r\n              newButton,\r\n              approvedButton,\r\n              rejectedButton\r\n            );\r\n            statusFilter(newButton)\r\n          \"\r\n          class=\"btn btn-primary btn-xs mr-2 active\"\r\n        >\r\n          New\r\n        </button>\r\n        <button\r\n          #approvedButton\r\n          type=\"button\"\r\n          (click)=\"\r\n            removeAllAction(\r\n              allButton,\r\n              newButton,\r\n              approvedButton,\r\n              rejectedButton\r\n            );\r\n            statusFilter(approvedButton)\r\n          \"\r\n          class=\"btn btn-primary btn-xs mr-2\"\r\n        >\r\n          Approved\r\n        </button>\r\n        <button\r\n          #rejectedButton\r\n          type=\"button\"\r\n          (click)=\"\r\n            removeAllAction(\r\n              allButton,\r\n              newButton,\r\n              approvedButton,\r\n              rejectedButton\r\n            );\r\n            statusFilter(rejectedButton)\r\n          \"\r\n          class=\"btn btn-primary btn-xs mr-2\"\r\n        >\r\n          Rejected\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            [(source)]=\"orders\"\r\n            (edit)=\"openUpdate($event)\"\r\n          >\r\n          </ng2-smart-table>\r\n        </div>\r\n      </div>\r\n      <app-paging-server-view\r\n        *ngIf=\"!isGetOrders && data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Container-fluid Ends-->\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClientService } from \"src/app/lib/http/http-client\";\r\nimport { OrderDetailModel } from \"../../models/orders/order.model\";\r\n\r\n\r\n@Injectable()\r\nexport class OrderDetailsService {\r\n\r\n  private url = '/api/order-detail';\r\n\r\n  constructor(private httpClient: HttpClientService) { }\r\n\r\n  get(request: any) {\r\n    return this.httpClient.getObservable(this.url, request).toPromise();\r\n  }\r\n\r\n  create(model:OrderDetailModel) {\r\n    return this.httpClient.postObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  update(model: OrderDetailModel) {\r\n    return this.httpClient.putObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  delete(id:string) {\r\n    const url = `${this.url}?id=${id}`;\r\n    return this.httpClient.deleteObservable(url).toPromise();\r\n  }\r\n  getByOrder(id: any,request: any) {\r\n    const url = `${this.url}/order?id=${id}`\r\n    return this.httpClient.getObservable(url, request).toPromise();\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListOrdersComponent } from './list-order/list-orders.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-orders',\r\n        component: ListOrdersComponent,\r\n        data: {\r\n          title: \"Order List\",\r\n          breadcrumb: \"Order List\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class OrdersRoutingModule { }\r\n","export class OrderModel {\r\n  id?: string;\r\n  fullName?: string;\r\n  firstName?= '';\r\n  lastName?= '';\r\n  address = '';\r\n  phone = '';\r\n  email = '';\r\n  note? = '';\r\n  status: string = 'New';\r\n  totalAmount = 0;\r\n  totalItem = 0;\r\n  orderDetails?: OrderDetailModel[] = [];\r\n  couponId?:string;\r\n  couponName?:string;\r\n  couponCode?:string;\r\n  couponPercent?:number;\r\n  couponValue?:number;\r\n  hasCoupon?:boolean;\r\n  createByDate?:string;\r\n}\r\n\r\nexport class OrderDetailModel {\r\n  // orderId:string;\r\n  productName = '';\r\n  productId = '';\r\n  price = 0;\r\n  quantity = 0;\r\n  totalAmount = 0;\r\n  productImgUrl = ''\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"orderForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Order {{ item.code }}</h4>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"><span>*</span> Full Name</label>\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"fullName\"\r\n                />\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    (orderFormControl.fullName.touched || submitted) &&\r\n                    orderFormControl.fullName.errors?.required\r\n                  \"\r\n                >\r\n                  Full Name is required\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"><span>*</span> Address</label>\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"address\"\r\n                />\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    (orderFormControl.address.touched || submitted) &&\r\n                    orderFormControl.address.errors?.required\r\n                  \"\r\n                >\r\n                  Address is required\r\n                </span>\r\n              </div>\r\n\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"><span>*</span> Email</label>\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"email\"\r\n                />\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    (orderFormControl.email.touched || submitted) &&\r\n                    orderFormControl.email.errors?.required\r\n                  \"\r\n                >\r\n                  Email is required\r\n                </span>\r\n              </div>\r\n\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"><span>*</span> Phone</label>\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"phone\"\r\n                />\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    (orderFormControl.phone.touched || submitted) &&\r\n                    orderFormControl.phone.errors?.required\r\n                  \"\r\n                >\r\n                  Phone is required\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"><span>*</span> Status</label>\r\n                <input class=\"form-control col-xl-8 col-md-7\" type=\"text\" required formControlName=\"status\" readonly />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <label>Order Details List</label>\r\n            </div>\r\n            <div class=\"vendor-table\">\r\n              <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n                <div class=\"table-responsive\">\r\n                  <ng2-smart-table\r\n                    [settings]=\"settings\"\r\n                    [(source)]=\"orderDetails\"\r\n                  >\r\n                  </ng2-smart-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Container-fluid Ends-->\r\n  <app-modal-footer [data]=\"modalFooter\" (onAction)=\"approve()\"></app-modal-footer>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport {\r\n  OrderDetailModel,\r\n  OrderModel,\r\n} from 'src/app/lib/data/models/orders/order.model';\r\n\r\nimport { OrderDetailsService } from 'src/app/lib/data/services/orders/order-details.service';\r\nimport { OrdersService } from 'src/app/lib/data/services/orders/orders.service';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport {\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\nimport Swal from 'sweetalert2';\r\nimport { CustomViewCellNumberComponent } from 'src/app/shared/components/custom-view-cell-number/custom-view-cell-number.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\n\r\n@Component({\r\n  selector: 'app-update-order',\r\n  templateUrl: './update-order.component.html',\r\n  styleUrls: ['./update-order.component.scss'],\r\n  providers: [OrdersService, OrderDetailsService],\r\n})\r\nexport class UpdateOrderComponent implements OnInit {\r\n  public orderForm: FormGroup;\r\n  public item: any;\r\n  public order = new OrderModel();\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  submitted = false;\r\n  public orderDetails: OrderDetailModel[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private ordersService: OrdersService,\r\n    private orderDetailsService: OrderDetailsService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadFormItem();\r\n    this.createModal();\r\n    this.getOrderDetails();\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    columns: {\r\n      productImgUrl: {\r\n        title: 'Image',\r\n        type: 'custom',\r\n        renderComponent: ViewImageCellComponent,\r\n      },\r\n      productName: {\r\n        title: 'Product Name',\r\n      },\r\n      price: {\r\n        title: 'Price',\r\n        value: 'price',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellNumberComponent,\r\n      },\r\n      quantity: {\r\n        title: 'Quantity',\r\n        value: 'quantity',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n      totalAmount: {\r\n        title: 'Total Amount',\r\n        value: 'totalAmount',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellNumberComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  loadFormItem() {\r\n    var check = this.item.status == 'Rejected';\r\n    this.orderForm = this.formBuilder.group({\r\n      fullName: [\r\n        { value: this.item.fullName, disabled: check },\r\n        Validators.required,\r\n      ],\r\n      address: [\r\n        { value: this.item.address, disabled: check },\r\n        Validators.required,\r\n      ],\r\n      email: [{ value: this.item.email, disabled: check }, Validators.required],\r\n      phone: [{ value: this.item.phone, disabled: check }, Validators.required],\r\n      status: [\r\n        { value: this.item.status, disabled: true },\r\n        Validators.required,\r\n      ],\r\n    });\r\n  }\r\n\r\n  createModal() {\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = `Update Order`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.buttons = [\r\n      {\r\n        color: 'btn btn-primary',\r\n        title: 'close',\r\n        onAction: (event: any) => {\r\n          this.ngbActiveModal.dismiss();\r\n        },\r\n      },\r\n    ];\r\n    if (this.item.status == 'New') {\r\n      this.modalFooter.buttons = [\r\n        {\r\n          color: 'btn btn-info',\r\n          title: 'save',\r\n          onAction: (event: any) => {\r\n            this.save();\r\n          },\r\n        },\r\n        {\r\n          color: 'btn btn-success',\r\n          title: 'approve',\r\n          onAction: (event: any) => {\r\n            this.approve();\r\n          },\r\n        },\r\n        {\r\n          color: 'btn btn-primary',\r\n          title: 'reject',\r\n          onAction: (event: any) => {\r\n            this.reject();\r\n          },\r\n        },\r\n      ];\r\n    }\r\n\r\n    if (this.item.status == 'Approved') {\r\n      this.modalFooter.buttons = [\r\n        {\r\n          color: 'btn btn-info',\r\n          title: 'save',\r\n          onAction: (event: any) => {\r\n            this.save();\r\n          },\r\n        },\r\n        {\r\n          color: 'btn btn-primary',\r\n          title: 'close',\r\n          onAction: (event: any) => {\r\n            this.ngbActiveModal.dismiss();\r\n          },\r\n        },\r\n      ];\r\n    }\r\n  }\r\n\r\n  get orderFormControl() {\r\n    return this.orderForm.controls;\r\n  }\r\n\r\n  loadOrderModel() {\r\n    this.order = {\r\n      fullName: this.orderForm.controls.fullName.value,\r\n      address: this.orderForm.controls.address.value,\r\n      email: this.orderForm.controls.email.value,\r\n      phone: this.orderForm.controls.phone.value,\r\n      status: this.item.status,\r\n      id: this.item.id,\r\n      totalAmount: this.item.totalAmount,\r\n      totalItem: this.item.totalItem,\r\n    };\r\n  }\r\n\r\n  save() {\r\n    this.loadOrderModel();\r\n\r\n    this.submitted = true;\r\n    if (this.orderForm.valid) {\r\n      this.ordersService\r\n        .update(this.order)\r\n        .then(() => {\r\n          this.messageService.notification(\r\n            'Order has been edited',\r\n            TypeSweetAlertIcon.SUCCESS\r\n          );\r\n        })\r\n        .catch((er) => {\r\n          this.messageService.alert(\r\n            er.error.message ??\r\n              JSON.stringify(er.error.error) ??\r\n              'Server Disconnected',\r\n            TypeSweetAlertIcon.ERROR\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  approve() {\r\n    this.loadOrderModel();\r\n    this.order.status = 'Approved';\r\n\r\n    this.messageService\r\n      .confirm(`Do you want to approve the order?`, 'Yes', 'No', false)\r\n      .then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          this.submitted = true;\r\n          if (this.orderForm.valid) {\r\n            this.ordersService\r\n              .update(this.order)\r\n              .then(() => {\r\n                this.messageService.notification(\r\n                  'Order has been approved',\r\n                  TypeSweetAlertIcon.SUCCESS\r\n                );\r\n                this.ngbActiveModal.close();\r\n              })\r\n              .catch((er) => {\r\n                this.messageService.alert(\r\n                  er.error.message ??\r\n                    JSON.stringify(er.error.error) ??\r\n                    'Server Disconnected',\r\n                  TypeSweetAlertIcon.ERROR\r\n                );\r\n              });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  reject() {\r\n    this.loadOrderModel();\r\n    this.order.status = 'Rejected';\r\n    Swal.fire({\r\n      title: `Do you want to reject the order?`,\r\n      input: 'text',\r\n      inputPlaceholder: 'Why?',\r\n      showCancelButton: true,\r\n      confirmButtonText: `Yes`,\r\n      icon: 'question',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        this.submitted = true;\r\n        this.order.note = result.value;\r\n        console.log(result.value);\r\n        if (this.orderForm.valid) {\r\n          this.ordersService\r\n            .update(this.order)\r\n            .then((res) => {\r\n              this.messageService.notification(\r\n                'Order has been rejected',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.ngbActiveModal.close();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n              // if (er.error.hasError) {\r\n              //   console.log(er.error.message);\r\n              // }\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderDetails() {\r\n    this.orderDetailsService\r\n      .getByOrder(this.item.id, null)\r\n      .then((res: ReturnMessage<OrderDetailModel[]>) => {\r\n        if (!res.hasError) {\r\n          this.orderDetails = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n        // if (er.error.hasError) {\r\n        //   console.log(er.error.message);\r\n        // }\r\n      });\r\n  }\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { BannersService } from 'src/app/lib/data/services';\r\nimport { ListOrdersComponent } from './list-order/list-orders.component';\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\nimport { UpdateOrderComponent } from './update-order/update-order.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    OrdersRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [ListOrdersComponent, UpdateOrderComponent],\r\n  providers: [BannersService],\r\n})\r\nexport class OrdersModule {}\r\n"]}