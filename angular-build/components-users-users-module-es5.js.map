{"version":3,"sources":["webpack:///src/app/components/users/list-users/list-users.component.ts","webpack:///src/app/components/users/list-users/list-users.component.html","webpack:///src/app/components/users/users-routing.module.ts","webpack:///src/app/components/users/users.module.ts","webpack:///src/app/lib/data/services/users/user.service.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html","webpack:///src/app/components/users/users-details/users-details.component.ts","webpack:///src/app/components/users/users-details/users-details.component.html"],"names":["ListUsersComponent","modalService","userService","messageService","authService","closeResult","params","settings","mode","pager","display","perPage","actions","position","columns","imageUrl","filter","title","type","renderComponent","username","email","firstName","lastName","getList","subUser","unsubscribe","callUserInfo","subscribe","res","userInfo","event","data","id","alert","INFO","confirm","then","isConfirmed","user","notification","SUCCESS","er","error","message","JSON","stringify","ERROR","item","modalRef","open","size","componentInstance","result","close","dismiss","get","hasError","users","results","pageIndex","openPopup","selector","templateUrl","styleUrls","providers","routes","path","children","component","breadcrumb","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations","UserService","httpClient","url","request","getObservable","toPromise","model","postObservable","putObservable","deleteObservable","update","create","CustomViewCellStringComponent","value","rowData","UserDetailComponent","formBuilder","ngbActiveModal","modalFile","typeFile","IMAGE","multiBoolen","enityType","USER","loadItem","fileURL","push","usersForm","group","required","password","modalHeader","modalFooter","messageFail","invalid","files","listFile","callServiceToSave","save","add","remove","forEach","e","i","includes","splice","removeAll","controls","setValue","join","onChangeData"],"mappings":"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","file":"components-users-users-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n  UserDataReturnDTOModel,\r\n} from 'src/app/lib/data/models';\r\nimport { CategoryModel } from 'src/app/lib/data/models/categories/category.model';\r\nimport { UserModel } from 'src/app/lib/data/models/users/user.model';\r\nimport { AuthService, FileService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport { UserDetailComponent } from '../users-details/users-details.component';\r\nimport { UserService } from './../../../lib/data/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-list-users',\r\n  templateUrl: './list-users.component.html',\r\n  styleUrls: ['./list-users.component.scss'],\r\n  providers: [UserService],\r\n})\r\nexport class ListUsersComponent implements OnInit, OnDestroy {\r\n  public users: UserModel[];\r\n  closeResult = '';\r\n  public data: PageModel<UserModel>;\r\n  params: any = {};\r\n  userInfo: UserDataReturnDTOModel;\r\n  subUser: Subscription;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private userService: UserService,\r\n    private messageService: MessageService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.getList();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subUser.unsubscribe();\r\n    this.subUser = null;\r\n  }\r\n  ngOnInit(): void {\r\n    this.subUser = this.authService.callUserInfo.subscribe(\r\n      (res) => (this.userInfo = res)\r\n    );\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    pager: {\r\n      display: true,\r\n      perPage: 10,\r\n    },\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      imageUrl: {\r\n        filter: false,\r\n        title: 'Image',\r\n        type: 'custom',\r\n        renderComponent: ViewImageCellComponent,\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      email: {\r\n        title: 'Email',\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n      },\r\n    },\r\n  };\r\n\r\n  delete(event: any) {\r\n    if (\r\n      event.data.id == '10000000-0000-0000-0000-000000000000' ||\r\n      event.data.id == this.userInfo.id\r\n    ) {\r\n      this.messageService.alert(\r\n        'Your access permissions may be inadequate to perform the requested operation on this resource.',\r\n        TypeSweetAlertIcon.INFO\r\n      );\r\n      return;\r\n    }\r\n    this.messageService\r\n      .confirm(`Do you want to delete the user?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let user = event.data as UserModel;\r\n          this.userService\r\n            .delete(user)\r\n            .then(() => {\r\n              this.messageService.notification(\r\n                'User has been deleted',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.getList();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopup(item: any) {\r\n    if (\r\n      '10000000-0000-0000-0000-000000000000' != this.userInfo.id &&\r\n      item?.data.id == '10000000-0000-0000-0000-000000000000'\r\n    ) {\r\n      this.messageService.alert(\r\n        'Your access permissions may be inadequate to perform the requested operation on this resource.',\r\n        TypeSweetAlertIcon.INFO\r\n      );\r\n      return;\r\n    }\r\n    var modalRef = this.modalService.open(UserDetailComponent, {\r\n      size: 'lg',\r\n    });\r\n    if (item) modalRef.componentInstance.item = item.data;\r\n\r\n    modalRef.result.then(\r\n      (close) => {\r\n        this.getList();\r\n      },\r\n      (dismiss) => {}\r\n    );\r\n  }\r\n\r\n  getList() {\r\n    this.userService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<UserModel>>) => {\r\n        if (!res.hasError) {\r\n          this.users = res.data.results;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        if (er.error.hasError) {\r\n          // console.log(er.error.message);\r\n        }\r\n      });\r\n  }\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getList();\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Admin Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            (edit)=\"openPopup($event)\"\r\n            (create)=\"openPopup(null)\"\r\n            (delete)=\"delete($event)\"\r\n            [(source)]=\"users\"\r\n          ></ng2-smart-table>\r\n        </div>\r\n      </div>\r\n      <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <button (click)=\"openCreate()\">Add</button> -->\r\n<!-- Container-fluid Ends-->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListUsersComponent } from './list-users/list-users.component';\r\nimport { UserDetailComponent } from './users-details/users-details.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-users',\r\n        component: ListUsersComponent,\r\n        data: {\r\n          title: 'Admin List',\r\n          breadcrumb: 'Admin List',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ListUsersComponent } from './list-users/list-users.component';\r\nimport { UserDetailComponent } from './users-details/users-details.component';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [ListUsersComponent, UserDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    NgbModalModule,\r\n    Ng2SmartTableModule,\r\n  ],\r\n})\r\nexport class UsersModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClientService } from 'src/app/lib/http/http-client';\r\nimport { UserModel } from '../../models/users/user.model';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private url = '/api/user';\r\n\r\n  constructor(private httpClient: HttpClientService) { }\r\n\r\n  get(request: any) {\r\n    return this.httpClient.getObservable(this.url, request).toPromise();\r\n  }\r\n\r\n  create(model: UserModel) {\r\n    return this.httpClient.postObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  update(model: UserModel) {\r\n    return this.httpClient.putObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  delete(model: UserModel) {\r\n    const url = `${this.url}/?id=${model?.id}`;\r\n    return this.httpClient.deleteObservable(url).toPromise();\r\n  }\r\n\r\n  save(model) {\r\n    if (model.id) {\r\n      return this.update(model);\r\n    }\r\n    return this.create(model);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { VirtualTimeScheduler } from 'rxjs';\r\nimport {\r\n  FileDtoModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { UserModel } from 'src/app/lib/data/models/users/user.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { UserService } from 'src/app/lib/data/services/users/user.service';\r\n\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n@Component({\r\n  selector: 'app-users-details',\r\n  templateUrl: './users-details.component.html',\r\n  styleUrls: ['./users-details.component.scss'],\r\n  providers: [UserService],\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  public usersForm: FormGroup;\r\n  public permissionForm: FormGroup;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public user: UserModel;\r\n  messageFail: string;\r\n  @Input() item: UserModel;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.USER;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItem();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.fileURL.push(this.item.imageUrl);\r\n    }\r\n  }\r\n\r\n  loadItem() {\r\n    this.usersForm = this.formBuilder.group({\r\n      username: [this.item ? this.item.username : '', [Validators.required]],\r\n      password: [this.item ? this.item.password : '', [Validators.required]],\r\n      email: [this.item ? this.item.email : '', [Validators.email]],\r\n      firstName: [this.item ? this.item.firstName : ''],\r\n      lastName: [this.item ? this.item.lastName : ''],\r\n      imageUrl: [this.item ? this.item.imageUrl : ''],\r\n    });\r\n\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = this.item ? `Update ${this.item.username}` : `Add`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n\r\n  save() {\r\n    this.messageFail = '';\r\n\r\n    if (this.usersForm.invalid) {\r\n      // console.log(this.usersForm);\r\n      return;\r\n    }\r\n\r\n    this.user = {\r\n      username: this.usersForm.value.username,\r\n      password: this.usersForm.value.password,\r\n      email: this.usersForm.value.email,\r\n      firstName: this.usersForm.value.firstName,\r\n      lastName: this.usersForm.value.lastName,\r\n      imageUrl: this.usersForm.value.imageUrl,\r\n      id: this.item ? this.item.id : '',\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.callServiceToSave();\r\n  }\r\n\r\n  callServiceToSave() {\r\n    this.userService\r\n      .save(this.user)\r\n      .then((data: ReturnMessage<UserModel>) => {\r\n        this.messageService.notification(\r\n          this.item? 'Admin profile has been edited':'Admin profile has been created',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n            TypeSweetAlertIcon.ERROR\r\n        );\r\n        if (er.error.message) this.messageFail = er.error.message;\r\n        // console.log(e);\r\n      });\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.usersForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"usersForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Admin Details</h4>\r\n              <p class=\"text-danger\" *ngIf=\"messageFail\">\r\n                {{ messageFail }}\r\n              </p>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Username</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"username\"\r\n                  autocomplete=\"new-password\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\" *ngIf=\"!item\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Password</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"password\"\r\n                  formControlName=\"password\"\r\n                  autocomplete=\"new-password\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Email</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      usersForm.controls.email.dirty &&\r\n                      usersForm.controls.email.errors?.email\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"usersForm.controls.email.errors?.email\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div>Wrong email type</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  FirstName</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"firstName\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  LastName</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"lastName\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  hidden\r\n                />\r\n\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer [data]=\"modalFooter\" (onAction)=\"save()\"></app-modal-footer>\r\n"]}