{"version":3,"sources":["webpack:///src/app/components/profiles/profile-routing.module.ts","webpack:///src/app/components/profiles/profile-settings/profile-settings.component.ts","webpack:///src/app/components/profiles/profile-settings/profile-settings.component.html","webpack:///src/app/components/profiles/profiles.module.ts"],"names":["routes","path","children","component","data","title","breadcrumb","ProfileRoutingModule","forChild","imports","exports","ProfileSettingsComponent","formBuilder","profileService","route","authService","messageService","submitted","update","modalFile","typeFile","IMAGE","multiBoolen","enityType","USER","entrySub","unsubscribe","callUserInfo","subscribe","it","userInfo","loadFormItem","fileURL","push","imageUrl","profileForm","controls","passwordForm","group","firstName","required","lastName","email","password","newPassword","confirmNewPassword","listFile","invalid","updateProfile","value","id","files","then","resp","changeUserInfo","snapshot","user","hasError","notification","SUCCESS","updateSwitch","er","alert","error","message","JSON","stringify","ERROR","passwordFormControl","passwordProfile","userName","username","changePassword","reset","event","add","remove","forEach","e","i","includes","splice","removeAll","setValue","join","selector","templateUrl","styleUrls","providers","ProfilesModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMA,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,gBAAQ,EAAE,CACN;AACID,cAAI,EAAE,kBADV;AAEIE,mBAAS,EAAE,qGAFf;AAGIC,cAAI,EAAE;AACFC,iBAAK,EAAE,kBADL;AAEFC,sBAAU,EAAE;AAFV;AAHV,SADM;AAFd,OADmB,CAAvB;;UAqBaC,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAJpB,CAAC,6DAAaC,QAAb,CAAsBR,MAAtB,CAAD,CAIoB,EAHnB,4DAGmB;;;;4HAApBO,oB,EAAoB;AAAA;AAAA,oBAHnB,4DAGmB;AAAA,S;AAHP,O;;;;;wEAGbA,oB,EAAoB;gBALhC,sDAKgC;iBALvB;AACNE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBR,MAAtB,CAAD,CADH;AAENU,mBAAO,EAAE,CAAC,4DAAD;AAFH,W;AAKuB,U;;;;;;;;;;;;;;;;;;AC1BjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSgB;;AAAuD;;;;AAApC;;;;;;;;AAqBX;;AACE;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;AACF;;;;;;AAKN;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAW;;AACf;;AAAI;;AAAyB;;AAC/B;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAwB;;AAC9B;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAqB;;AAC3B;;AACA;;AACE;;AAAI;;AAAO;;AAEX;;AAKF;;AACF;;AACF;;AACF;;;;;;AArBY;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAMF;;AAAA;;;;;;AAiCJ;;AAQE;;AACF;;;;;;AAoBA;;AAQE;;AACF;;;;;;AAoBA;;AAOE;;AACF;;;;;;AA8BA;;AAQE;;AACF;;;;;;;;AAME;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;;;;;;;;;;;;;AA7IV;;AACE;;AAKE;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAU;;AAE5B;;AAaA;;AACE;;AAUF;;AACF;;AACA;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAS;;AAE3B;;AAYA;;AACE;;AAUF;;AACF;;AACA;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAK;;AAEvB;;AAYA;;AACE;;AASF;;AACF;;AACA;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAM;;AAExB;;AAcA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AACH;;AACA;;AACE;;AAUF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAOA;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAvJI;;AAAA;;AAcI;;AAAA;;AAUG;;AAAA;;AAmBH;;AAAA;;AAUG;;AAAA;;AAoBH;;AAAA;;AASG;;AAAA;;AAoBH;;AAAA;;AASE;;AAAA,6FAAkB,SAAlB,EAAkB,cAAlB;;AASC;;AAAA;;AAcE;;AAAA;;;;;;AAjMb;;AAME;;AACE;;AACE;;AAQE;;AAAoB;;AAAO;;AAC3B;;AAQF;;AACF;;AACF;;AAEA;;AA2BF;;AACA;;;;;;AAxCiC;;AAAA;;AAYc;;AAAA;;AA4BzC;;AAAA;;;;;;AA8JN;;AAAgC;;;;;;AAyB1B;;AAOE;;AACF;;;;;;AAqBA;;AAQE;;AACF;;;;;;AA2BA;;AASE;;AACF;;;;;;AAGA;;AAQE;;AACF;;;;;;;;AA7GN;;AAKE;;AAAoB;;AAAe;;AACnC;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAQ;;AAE1B;;AAWA;;AACE;;AASF;;AACF;;AACA;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAY;;AAE9B;;AAaA;;AACE;;AAUF;;AACF;;AAEA;;AACE;;AACG;;AAAM;;AAAC;;AAAQ;;AAAoB;;AAEtC;;AAkBA;;AACE;;AAWF;;AACA;;AACE;;AAUF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA5HE;;AAcI;;AAAA;;AASG;;AAAA;;AAmBH;;AAAA;;AAUG;;AAAA;;AAqBH;;AAAA;;AAeG;;AAAA;;AAaA;;AAAA;;;;UD7SZC,wB;AAcX,0CACUC,WADV,EAEUC,cAFV,EAGUC,KAHV,EAIUC,WAJV,EAKUC,cALV,EAKwC;AAAA;;AAJ9B,eAAAJ,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAfV,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,MAAA,GAAS,KAAT;AAcE,eAAKC,SAAL,GAAiB,IAAI,6FAAJ,EAAjB;AACA,eAAKA,SAAL,CAAeC,QAAf,GAA0B,6FAASC,KAAnC;AACA,eAAKF,SAAL,CAAeG,WAAf,GAA6B,KAA7B;AACA,eAAKH,SAAL,CAAeI,SAAf,GAA2B,+FAAWC,IAAtC;AACD;;;;iBACD,uBAAW;AACT,gBAAI,KAAKC,QAAT,EAAmB;AACjB,mBAAKA,QAAL,CAAcC,WAAd;AACA,mBAAKD,QAAL,GAAgB,IAAhB;AACD;AACF;;;iBAED,oBAAW;AAAA;;AACT,iBAAKA,QAAL,GAAgB,KAAKV,WAAL,CAAiBY,YAAjB,CAA8BC,SAA9B,CAAwC,UAACC,EAAD,EAAQ;AAC9D,mBAAI,CAACC,QAAL,GAAgBD,EAAhB;;AACA,mBAAI,CAACE,YAAL;;AACA,kBAAI,KAAI,CAACD,QAAT,EAAmB;AACjB,qBAAI,CAACE,OAAL,GAAe,EAAf;;AACA,qBAAI,CAACA,OAAL,CAAaC,IAAb,CAAkB,KAAI,CAACH,QAAL,CAAcI,QAAhC;AACD;AACF,aAPe,CAAhB;AAQD;;;eAED,eAAyB;AACvB,mBAAO,KAAKC,WAAL,CAAiBC,QAAxB;AACD;;;eACD,eAA0B;AACxB,mBAAO,KAAKC,YAAL,CAAkBD,QAAzB;AACD;;;iBAED,wBAAe;AACb,iBAAKD,WAAL,GAAmB,KAAKvB,WAAL,CAAiB0B,KAAjB,CAAuB;AACxCC,uBAAS,EAAE,CACT,KAAKT,QAAL,GAAgB,KAAKA,QAAL,CAAcS,SAA9B,GAA0C,EADjC,EAET,0DAAWC,QAFF,CAD6B;AAKxCC,sBAAQ,EAAE,CACR,KAAKX,QAAL,GAAgB,KAAKA,QAAL,CAAcW,QAA9B,GAAyC,EADjC,EAER,0DAAWD,QAFH,CAL8B;AASxCE,mBAAK,EAAE,CAAC,KAAKZ,QAAL,GAAgB,KAAKA,QAAL,CAAcY,KAA9B,GAAsC,EAAvC,EAA2C,0DAAWF,QAAtD,CATiC;AAUxCN,sBAAQ,EAAE,CACR,KAAKJ,QAAL,GAAgB,KAAKA,QAAL,CAAcI,QAA9B,GAAyC,EADjC,EAER,0DAAWM,QAFH;AAV8B,aAAvB,CAAnB;AAeA,iBAAKH,YAAL,GAAoB,KAAKzB,WAAL,CAAiB0B,KAAjB,CAAuB;AACzCK,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAD+B;AAEzCI,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAF4B;AAGzCK,gCAAkB,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB;AAHqB,aAAvB,CAApB;AAKD;;;iBAED,wBAAe;AACb,iBAAKrB,SAAL,CAAe2B,QAAf,GAA0B,EAA1B;AACA,iBAAK5B,MAAL,GAAc,KAAKA,MAAL,IAAe,IAAf,GAAsB,KAAtB,GAA8B,IAA5C;AACD;;;iBACD,yBAAgB;AAAA;;AACd,gBAAI,KAAKiB,WAAL,CAAiBY,OAArB,EAA8B;AAC5B;AACD;;AACD,iBAAKC,aAAL,GAAqB;AACnBT,uBAAS,EAAE,KAAKJ,WAAL,CAAiBC,QAAjB,CAA0BG,SAA1B,CAAoCU,KAD5B;AAEnBR,sBAAQ,EAAE,KAAKN,WAAL,CAAiBC,QAAjB,CAA0BK,QAA1B,CAAmCQ,KAF1B;AAGnBP,mBAAK,EAAE,KAAKP,WAAL,CAAiBC,QAAjB,CAA0BM,KAA1B,CAAgCO,KAHpB;AAInBf,sBAAQ,EAAE,KAAKC,WAAL,CAAiBC,QAAjB,CAA0BF,QAA1B,CAAmCe,KAJ1B;AAKnBC,gBAAE,EAAE,KAAKpB,QAAL,CAAcoB,EALC;AAMnBC,mBAAK,EAAE,KAAKhC,SAAL,CAAe2B;AANH,aAArB;AASA,iBAAKjC,cAAL,CACGK,MADH,CACU,KAAK8B,aADf,EAEGI,IAFH,CAEQ,UAACC,IAAD,EAAiD;AACrD,oBAAI,CAACtC,WAAL,CAAiBuC,cAAjB,CAAgCD,IAAI,CAACjD,IAArC;;AACA,oBAAI,CAACU,KAAL,CAAWyC,QAAX,CAAoBnD,IAApB,CAAyBoD,IAAzB,GAAgCH,IAAI,CAACjD,IAArC;;AACA,kBAAI,CAACiD,IAAI,CAACI,QAAV,EAAoB;AAClB,sBAAI,CAACzC,cAAL,CAAoB0C,YAApB,CACE,0BADF,EAEE,2EAAmBC,OAFrB;;AAIA,sBAAI,CAACC,YAAL;AACD;AACF,aAZH,WAaS,UAACC,EAAD,EAAQ;;;AACb,oBAAI,CAAC7C,cAAL,CAAoB8C,KAApB,CAA0B,CAAD,WACvBD,EAAE,CAACE,KAAH,CAASC,OADc,MACP,IADO,IACP,aADO,GACP,EADO,GAErBC,IAAI,CAACC,SAAL,CAAeL,EAAE,CAACE,KAAH,CAASA,KAAxB,CAFsB,MAEQ,IAFR,IAEQ,aAFR,GAEQ,EAFR,GAGtB,qBAHJ,EAIE,2EAAmBI,KAJrB;AAMD,aApBH;AAqBD;;;iBACD,0BAAiB;AAAA;;AACf,gBACE,KAAK9B,YAAL,CAAkBU,OAAlB,IACA,KAAKqB,mBAAL,CAAyBvB,kBAAzB,CAA4CI,KAA5C,KACE,KAAKmB,mBAAL,CAAyBxB,WAAzB,CAAqCK,KAHzC,EAIE;AACA,mBAAKhC,SAAL,GAAiB,IAAjB;AACA;AACD;;AACD,iBAAKoD,eAAL,GAAuB;AACrB1B,sBAAQ,EAAE,KAAKN,YAAL,CAAkBD,QAAlB,CAA2BO,QAA3B,CAAoCM,KADzB;AAErBL,yBAAW,EAAE,KAAKP,YAAL,CAAkBD,QAAlB,CAA2BQ,WAA3B,CAAuCK,KAF/B;AAGrBJ,gCAAkB,EAAE,KAAKR,YAAL,CAAkBD,QAAlB,CAA2BS,kBAA3B,CAA8CI,KAH7C;AAIrBqB,sBAAQ,EAAE,KAAKxC,QAAL,CAAcyC;AAJH,aAAvB;AAMA,iBAAK1D,cAAL,CACG2D,cADH,CACkB,KAAKH,eADvB,EAEGjB,IAFH,CAEQ,UAACC,IAAD,EAAU;AACd,oBAAI,CAAChB,YAAL,CAAkBoC,KAAlB;;AACA,oBAAI,CAACzD,cAAL,CAAoB0C,YAApB,CACE,2BADF,EAEE,2EAAmBC,OAFrB;;AAIA,oBAAI,CAAC1C,SAAL,GAAiB,KAAjB;AACD,aATH,WAUS,UAAC4C,EAAD,EAAQ;;;AACb,oBAAI,CAAC7C,cAAL,CAAoB0C,YAApB,CAAiC,CAAD,WAC9BG,EAAE,CAACE,KAAH,CAASC,OADqB,MACd,IADc,IACd,aADc,GACd,EADc,GAE5BC,IAAI,CAACC,SAAL,CAAeL,EAAE,CAACE,KAAH,CAASA,KAAxB,CAF6B,MAEC,IAFD,IAEC,aAFD,GAEC,EAFD,GAG7B,qBAHJ,EAIE,2EAAmBI,KAJrB;AAMD,aAjBH;AAkBD;;;iBAED,sBAAaO,KAAb,EAA2E;AAAA;;AACzE,gBAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB;AACD;;AAED,gBAAI,CAAC,KAAK1C,OAAV,EAAmB;AACjB,mBAAKA,OAAL,GAAe,EAAf;AACD;;AAED,gBAAI0C,KAAK,CAACC,GAAV,EAAe;AACb,mBAAK3C,OAAL,gCAAmB,KAAKA,OAAxB,sBAAoC0C,KAAK,CAACC,GAA1C;AACD;;AAED,gBAAID,KAAK,CAACE,MAAV,EAAkB;AAChB,mBAAK5C,OAAL,CAAa6C,OAAb,CAAqB,UAACC,CAAD,EAAYC,CAAZ,EAAkB;AACrC,oBAAID,CAAC,CAACE,QAAF,CAAWN,KAAK,CAACE,MAAjB,CAAJ,EAA8B;AAC5B,wBAAI,CAAC5C,OAAL,CAAaiD,MAAb,CAAoBF,CAApB,EAAuB,CAAvB;AACD;AACF,eAJD;AAKD;;AAED,gBAAIL,KAAK,CAACQ,SAAV,EAAqB;AACnB,mBAAKlD,OAAL,GAAe,EAAf;AACD;;AAED,iBAAKG,WAAL,CAAiBC,QAAjB,CAA0BF,QAA1B,CAAmCiD,QAAnC,CAA4C,KAAKnD,OAAL,CAAaoD,IAAb,CAAkB,GAAlB,CAA5C;AACD;;;eAED,eAAe;mBAAA,CACb;;;AACA,mBAAO,CAAP,KAAO,KAAKtD,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEI,QAAtB;AACD;;;;;;;yBAnLUvB,wB,EAAwB,2H,EAAA,yI,EAAA,+H,EAAA,sI,EAAA,kK;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA,oFAFxB,CAAC,qEAAD,CAEwB,E;AAFX,iB;AAAA,e;AAAA,4rF;AAAA;AAAA;AC7B1B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAIA;;AAqNF;;AACA;;AACE;;AAGA;;AAgIF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;wED5UaA,wB,EAAwB;gBANpC,uDAMoC;iBAN1B;AACT0E,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD,CAHF;AAITC,qBAAS,EAAE,CAAC,qEAAD;AAJF,W;AAM0B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhCrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAwBaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,mBAFZ,CAAC,iGAAD,C;AAAgB,kBATlB,CACL,4DADK,EAEL,kEAFK,EAGL,oEAHK,EAIL,mEAJK,EAKL,4EALK,EAML,yEANK,CASkB;;;;4HAElBA,c,EAAc;AAAA,yBAHR,qGAGQ;AAHgB,oBAPnC,4DAOmC,EANnC,kEAMmC,EALnC,oEAKmC,EAJnC,mEAImC,EAHnC,4EAGmC,EAFnC,yEAEmC;AAGhB,S;AALP,O;;;;;wEAKPA,c,EAAc;gBAZ1B,sDAY0B;iBAZjB;AACNhF,mBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,oEAHK,EAIL,mEAJK,EAKL,4EALK,EAML,yEANK,CADH;AASNiF,wBAAY,EAAE,CAAC,qGAAD,CATR;AAUNF,qBAAS,EAAE,CAAC,iGAAD;AAVL,W;AAYiB,U","file":"components-profiles-profiles-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'profile-settings',\r\n                component: ProfileSettingsComponent,\r\n                data: {\r\n                    title: \"Profile Settings\",\r\n                    breadcrumb: \"Profile Settings\",\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ProfileRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  ChangePasswordProfileModel,\r\n  FileDtoModel,\r\n  ProfileModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n  UserDataReturnDTOModel,\r\n} from 'src/app/lib/data/models';\r\n\r\nimport {\r\n  AuthService,\r\n  FileService,\r\n  ProfileService,\r\n} from 'src/app/lib/data/services';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  ModalFile,\r\n  TypeFile,\r\n  EntityType,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\nimport Swal from 'sweetalert2';\r\nimport { Subscription } from 'rxjs';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-settings',\r\n  templateUrl: './profile-settings.component.html',\r\n  styleUrls: ['./profile-settings.component.scss'],\r\n  providers: [AuthService],\r\n})\r\nexport class ProfileSettingsComponent implements OnInit, OnDestroy {\r\n  public userInfo: UserDataReturnDTOModel;\r\n  public profileForm: FormGroup;\r\n  public passwordForm: FormGroup;\r\n  submitted = false;\r\n  public updateProfile: ProfileModel;\r\n  public passwordProfile: ChangePasswordProfileModel;\r\n  update = false;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n\r\n  entrySub: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private profileService: ProfileService,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.USER;\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.entrySub) {\r\n      this.entrySub.unsubscribe();\r\n      this.entrySub = null;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.entrySub = this.authService.callUserInfo.subscribe((it) => {\r\n      this.userInfo = it;\r\n      this.loadFormItem();\r\n      if (this.userInfo) {\r\n        this.fileURL = [];\r\n        this.fileURL.push(this.userInfo.imageUrl);\r\n      }\r\n    });\r\n  }\r\n\r\n  get profileFormControl() {\r\n    return this.profileForm.controls;\r\n  }\r\n  get passwordFormControl() {\r\n    return this.passwordForm.controls;\r\n  }\r\n\r\n  loadFormItem() {\r\n    this.profileForm = this.formBuilder.group({\r\n      firstName: [\r\n        this.userInfo ? this.userInfo.firstName : '',\r\n        Validators.required,\r\n      ],\r\n      lastName: [\r\n        this.userInfo ? this.userInfo.lastName : '',\r\n        Validators.required,\r\n      ],\r\n      email: [this.userInfo ? this.userInfo.email : '', Validators.required],\r\n      imageUrl: [\r\n        this.userInfo ? this.userInfo.imageUrl : '',\r\n        Validators.required,\r\n      ],\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n      newPassword: ['', Validators.required],\r\n      confirmNewPassword: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  updateSwitch() {\r\n    this.modalFile.listFile = [];\r\n    this.update = this.update == true ? false : true;\r\n  }\r\n  updateDetails() {\r\n    if (this.profileForm.invalid) {\r\n      return;\r\n    }\r\n    this.updateProfile = {\r\n      firstName: this.profileForm.controls.firstName.value,\r\n      lastName: this.profileForm.controls.lastName.value,\r\n      email: this.profileForm.controls.email.value,\r\n      imageUrl: this.profileForm.controls.imageUrl.value,\r\n      id: this.userInfo.id,\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.profileService\r\n      .update(this.updateProfile)\r\n      .then((resp: ReturnMessage<UserDataReturnDTOModel>) => {\r\n        this.authService.changeUserInfo(resp.data);\r\n        this.route.snapshot.data.user = resp.data;\r\n        if (!resp.hasError) {\r\n          this.messageService.notification(\r\n            'Profile has been updated',\r\n            TypeSweetAlertIcon.SUCCESS\r\n          );\r\n          this.updateSwitch();\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnecter',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n  changePassword() {\r\n    if (\r\n      this.passwordForm.invalid ||\r\n      this.passwordFormControl.confirmNewPassword.value !==\r\n        this.passwordFormControl.newPassword.value\r\n    ) {\r\n      this.submitted = true;\r\n      return;\r\n    }\r\n    this.passwordProfile = {\r\n      password: this.passwordForm.controls.password.value,\r\n      newPassword: this.passwordForm.controls.newPassword.value,\r\n      confirmNewPassword: this.passwordForm.controls.confirmNewPassword.value,\r\n      userName: this.userInfo.username,\r\n    };\r\n    this.profileService\r\n      .changePassword(this.passwordProfile)\r\n      .then((resp) => {\r\n        this.passwordForm.reset();\r\n        this.messageService.notification(\r\n          'Password has been changed',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.submitted = false;\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.notification(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.profileForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n\r\n  get getImage() {\r\n    // console.log(\"get image\");\r\n    return this.userInfo?.imageUrl;\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" style=\"justify-content: center\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card tab2-card mb-4\">\r\n        <div class=\"card-body\">\r\n          <ngb-tabset class=\"tab-coupon profile-tabs\">\r\n            <ngb-tab>\r\n              <ng-template ngbTabTitle>\r\n                <app-feather-icons [icon]=\"'user'\"></app-feather-icons>Profile\r\n              </ng-template>\r\n\r\n              <ng-template ngbTabContent>\r\n                <div\r\n                  class=\"tab-pane fade show active\"\r\n                  id=\"top-profile\"\r\n                  role=\"tabpanel\"\r\n                  aria-labelledby=\"top-profile-tab\"\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-11\">\r\n                      <div\r\n                        class=\"\r\n                          d-flex\r\n                          justify-content-between\r\n                          align-items-baseline\r\n                          mb-2\r\n                        \"\r\n                      >\r\n                        <h5 class=\"f-w-600\">Profile</h5>\r\n                        <div class=\"pull-right\" *ngIf=\"!update\">\r\n                          <button\r\n                            (click)=\"updateSwitch()\"\r\n                            class=\"btn btn-primary\"\r\n                          >\r\n                            Update Profile\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"table-responsive profile-table\" *ngIf=\"!update\">\r\n                    <table class=\"table table-responsive\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>First Name:</td>\r\n                          <td>{{ userInfo?.firstName }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Last Name:</td>\r\n                          <td>{{ userInfo?.lastName }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Email:</td>\r\n                          <td>{{ userInfo?.email }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Avatar:</td>\r\n                          <!-- <td>{{userInfo.imageUrl}}</td> -->\r\n                          <img\r\n                            [src]=\"getImage\"\r\n                            style=\"width: 200px; height: 200px\"\r\n                            appUiImageLoader\r\n                          />\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"update\">\r\n                  <form\r\n                    [formGroup]=\"profileForm\"\r\n                    class=\"needs-validation user-add\"\r\n                    novalidate=\"\"\r\n                  >\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> First name</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control col-xl-5 col-md-7\"\r\n                        id=\"validationCustom0\"\r\n                        type=\"text\"\r\n                        required\r\n                        formControlName=\"firstName\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.firstName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.firstName.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.firstName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.firstName.errors?.required\r\n                          \"\r\n                        >\r\n                          This field is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> Last name</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control col-xl-5 col-md-7\"\r\n                        id=\"\"\r\n                        type=\"text\"\r\n                        formControlName=\"lastName\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.lastName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.lastName.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.lastName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.lastName.errors?.required\r\n                          \"\r\n                        >\r\n                          Last name is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"validationCustom1\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> Email</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control col-xl-5 col-md-7\"\r\n                        id=\"validationCustom1\"\r\n                        type=\"text\"\r\n                        required=\"\"\r\n                        formControlName=\"email\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.email.touched || submitted) &&\r\n                            profileFormControl.email.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.email.touched || submitted) &&\r\n                            profileFormControl.email.errors?.required\r\n                          \"\r\n                        >\r\n                          This field is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> Avatar</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        id=\"validationCustom2\"\r\n                        type=\"text\"\r\n                        required=\"\"\r\n                        formControlName=\"imageUrl\"\r\n                        hidden\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.imageUrl.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.imageUrl.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"col-xl-5 col-md-7 p-0\">\r\n                        <app-upload-file\r\n                          [data]=\"modalFile\"\r\n                          [fileURL]=\"fileURL\"\r\n                          styleFile=\"width: 100% height: auto;\"\r\n                          (onChange)=\"onChangeData($event)\"\r\n                        ></app-upload-file>\r\n                      </div>\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.imageUrl.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.imageUrl.errors?.required\r\n                          \"\r\n                        >\r\n                          This field is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-11\">\r\n                        <div class=\"row justify-content-between float-right\">\r\n                          <button\r\n                            *ngIf=\"update\"\r\n                            (click)=\"updateSwitch()\"\r\n                            class=\"btn btn-default\"\r\n                          >\r\n                            CANCEL\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-primary\"\r\n                            (click)=\"updateDetails()\"\r\n                          >\r\n                            SAVE\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-tab>\r\n            <ngb-tab>\r\n              <ng-template ngbTabTitle>\r\n                <i data-feather=\"settings\"></i> Change Password\r\n              </ng-template>\r\n              <ng-template ngbTabContent>\r\n                <form\r\n                  [formGroup]=\"passwordForm\"\r\n                  class=\"needs-validation user-add\"\r\n                  novalidate=\"\"\r\n                >\r\n                  <h5 class=\"f-w-600\">Change Password</h5>\r\n                  <div class=\"form-group row\">\r\n                    <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                      ><span>*</span> Password</label\r\n                    >\r\n                    <input\r\n                      class=\"form-control col-xl-5 col-md-7\"\r\n                      id=\"\"\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid':\r\n                          (passwordFormControl.password.touched || submitted) &&\r\n                          passwordFormControl.password.errors?.required\r\n                      }\"\r\n                    />\r\n                    <div class=\"invalid-feedback col-md-3 offset-md-4\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          (passwordFormControl.password.touched || submitted) &&\r\n                          passwordFormControl.password.errors?.required\r\n                        \"\r\n                      >\r\n                        This field is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row\">\r\n                    <label for=\"validationCustom1\" class=\"col-xl-3 col-md-4\"\r\n                      ><span>*</span> New Password</label\r\n                    >\r\n                    <input\r\n                      class=\"form-control col-xl-5 col-md-7\"\r\n                      id=\"validationCustom1\"\r\n                      type=\"password\"\r\n                      required=\"\"\r\n                      formControlName=\"newPassword\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid':\r\n                          (passwordFormControl.newPassword.touched ||\r\n                            submitted) &&\r\n                          passwordFormControl.newPassword.errors?.required\r\n                      }\"\r\n                    />\r\n                    <div class=\"invalid-feedback col-md-3 offset-md-4\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          (passwordFormControl.newPassword.touched ||\r\n                            submitted) &&\r\n                          passwordFormControl.newPassword.errors?.required\r\n                        \"\r\n                      >\r\n                        This field is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"form-group row\">\r\n                    <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                      ><span>*</span> Confirm New Password</label\r\n                    >\r\n                    <input\r\n                      class=\"form-control col-xl-5 col-md-7\"\r\n                      id=\"validationCustom2\"\r\n                      type=\"password\"\r\n                      required=\"\"\r\n                      formControlName=\"confirmNewPassword\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid':\r\n                          ((passwordFormControl.confirmNewPassword.touched ||\r\n                            submitted) &&\r\n                            passwordFormControl.confirmNewPassword.errors\r\n                              ?.required) ||\r\n                          (passwordFormControl.confirmNewPassword.value !==\r\n                            passwordFormControl.newPassword.value &&\r\n                            passwordFormControl.confirmNewPassword.value\r\n                              .length > 0)\r\n                      }\"\r\n                    />\r\n                    <div class=\"invalid-feedback col-md-7 offset-md-4\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          (passwordFormControl.confirmNewPassword.touched ||\r\n                            submitted) &&\r\n                          passwordFormControl.confirmNewPassword.errors\r\n                            ?.required\r\n                        \"\r\n                      >\r\n                        This field is required\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"invalid-feedback col-md-7 offset-md-4 d-block\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          passwordFormControl.confirmNewPassword.value !==\r\n                            passwordFormControl.newPassword.value &&\r\n                          passwordFormControl.confirmNewPassword.value\r\n                        \"\r\n                      >\r\n                        New password and Confirm new password are not the same\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-11\">\r\n                      <div class=\"row float-right\">\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-primary\"\r\n                          (click)=\"changePassword()\"\r\n                        >\r\n                          CHANGE PASSWORD\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </ng-template>\r\n            </ngb-tab>\r\n          </ngb-tabset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ProfileService } from 'src/app/lib/data/services/profiles/profile.service';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        Ng2SmartTableModule,\r\n        ProfileRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [ProfileSettingsComponent],\r\n    providers: [ProfileService]\r\n})\r\nexport class ProfilesModule { }\r\n"]}