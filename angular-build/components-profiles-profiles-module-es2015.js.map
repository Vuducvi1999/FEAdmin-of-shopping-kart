{"version":3,"sources":["./src/app/components/profiles/profile-routing.module.ts","./src/app/components/profiles/profile-settings/profile-settings.component.ts","./src/app/components/profiles/profile-settings/profile-settings.component.html","./src/app/components/profiles/profiles.module.ts"],"names":[],"mappings":"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","file":"components-profiles-profiles-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'profile-settings',\r\n                component: ProfileSettingsComponent,\r\n                data: {\r\n                    title: \"Profile Settings\",\r\n                    breadcrumb: \"Profile Settings\",\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ProfileRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  ChangePasswordProfileModel,\r\n  FileDtoModel,\r\n  ProfileModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n  UserDataReturnDTOModel,\r\n} from 'src/app/lib/data/models';\r\n\r\nimport {\r\n  AuthService,\r\n  FileService,\r\n  ProfileService,\r\n} from 'src/app/lib/data/services';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  ModalFile,\r\n  TypeFile,\r\n  EntityType,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\nimport Swal from 'sweetalert2';\r\nimport { Subscription } from 'rxjs';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-settings',\r\n  templateUrl: './profile-settings.component.html',\r\n  styleUrls: ['./profile-settings.component.scss'],\r\n  providers: [AuthService],\r\n})\r\nexport class ProfileSettingsComponent implements OnInit, OnDestroy {\r\n  public userInfo: UserDataReturnDTOModel;\r\n  public profileForm: FormGroup;\r\n  public passwordForm: FormGroup;\r\n  submitted = false;\r\n  public updateProfile: ProfileModel;\r\n  public passwordProfile: ChangePasswordProfileModel;\r\n  update = false;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n\r\n  entrySub: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private profileService: ProfileService,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.USER;\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.entrySub) {\r\n      this.entrySub.unsubscribe();\r\n      this.entrySub = null;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.entrySub = this.authService.callUserInfo.subscribe((it) => {\r\n      this.userInfo = it;\r\n      this.loadFormItem();\r\n      if (this.userInfo) {\r\n        this.fileURL = [];\r\n        this.fileURL.push(this.userInfo.imageUrl);\r\n      }\r\n    });\r\n  }\r\n\r\n  get profileFormControl() {\r\n    return this.profileForm.controls;\r\n  }\r\n  get passwordFormControl() {\r\n    return this.passwordForm.controls;\r\n  }\r\n\r\n  loadFormItem() {\r\n    this.profileForm = this.formBuilder.group({\r\n      firstName: [\r\n        this.userInfo ? this.userInfo.firstName : '',\r\n        Validators.required,\r\n      ],\r\n      lastName: [\r\n        this.userInfo ? this.userInfo.lastName : '',\r\n        Validators.required,\r\n      ],\r\n      email: [this.userInfo ? this.userInfo.email : '', Validators.required],\r\n      imageUrl: [\r\n        this.userInfo ? this.userInfo.imageUrl : '',\r\n        Validators.required,\r\n      ],\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n      newPassword: ['', Validators.required],\r\n      confirmNewPassword: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  updateSwitch() {\r\n    this.modalFile.listFile = [];\r\n    this.update = this.update == true ? false : true;\r\n  }\r\n  updateDetails() {\r\n    if (this.profileForm.invalid) {\r\n      return;\r\n    }\r\n    this.updateProfile = {\r\n      firstName: this.profileForm.controls.firstName.value,\r\n      lastName: this.profileForm.controls.lastName.value,\r\n      email: this.profileForm.controls.email.value,\r\n      imageUrl: this.profileForm.controls.imageUrl.value,\r\n      id: this.userInfo.id,\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.profileService\r\n      .update(this.updateProfile)\r\n      .then((resp: ReturnMessage<UserDataReturnDTOModel>) => {\r\n        this.authService.changeUserInfo(resp.data);\r\n        this.route.snapshot.data.user = resp.data;\r\n        if (!resp.hasError) {\r\n          this.messageService.notification(\r\n            'Profile has been updated',\r\n            TypeSweetAlertIcon.SUCCESS\r\n          );\r\n          this.updateSwitch();\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnecter',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n  changePassword() {\r\n    if (\r\n      this.passwordForm.invalid ||\r\n      this.passwordFormControl.confirmNewPassword.value !==\r\n        this.passwordFormControl.newPassword.value\r\n    ) {\r\n      this.submitted = true;\r\n      return;\r\n    }\r\n    this.passwordProfile = {\r\n      password: this.passwordForm.controls.password.value,\r\n      newPassword: this.passwordForm.controls.newPassword.value,\r\n      confirmNewPassword: this.passwordForm.controls.confirmNewPassword.value,\r\n      userName: this.userInfo.username,\r\n    };\r\n    this.profileService\r\n      .changePassword(this.passwordProfile)\r\n      .then((resp) => {\r\n        this.passwordForm.reset();\r\n        this.messageService.notification(\r\n          'Password has been changed',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.submitted = false;\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.notification(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.profileForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n\r\n  get getImage() {\r\n    // console.log(\"get image\");\r\n    return this.userInfo?.imageUrl;\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" style=\"justify-content: center\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card tab2-card mb-4\">\r\n        <div class=\"card-body\">\r\n          <ngb-tabset class=\"tab-coupon profile-tabs\">\r\n            <ngb-tab>\r\n              <ng-template ngbTabTitle>\r\n                <app-feather-icons [icon]=\"'user'\"></app-feather-icons>Profile\r\n              </ng-template>\r\n\r\n              <ng-template ngbTabContent>\r\n                <div\r\n                  class=\"tab-pane fade show active\"\r\n                  id=\"top-profile\"\r\n                  role=\"tabpanel\"\r\n                  aria-labelledby=\"top-profile-tab\"\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-11\">\r\n                      <div\r\n                        class=\"\r\n                          d-flex\r\n                          justify-content-between\r\n                          align-items-baseline\r\n                          mb-2\r\n                        \"\r\n                      >\r\n                        <h5 class=\"f-w-600\">Profile</h5>\r\n                        <div class=\"pull-right\" *ngIf=\"!update\">\r\n                          <button\r\n                            (click)=\"updateSwitch()\"\r\n                            class=\"btn btn-primary\"\r\n                          >\r\n                            Update Profile\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"table-responsive profile-table\" *ngIf=\"!update\">\r\n                    <table class=\"table table-responsive\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>First Name:</td>\r\n                          <td>{{ userInfo?.firstName }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Last Name:</td>\r\n                          <td>{{ userInfo?.lastName }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Email:</td>\r\n                          <td>{{ userInfo?.email }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Avatar:</td>\r\n                          <!-- <td>{{userInfo.imageUrl}}</td> -->\r\n                          <img\r\n                            [src]=\"getImage\"\r\n                            style=\"width: 200px; height: 200px\"\r\n                            appUiImageLoader\r\n                          />\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"update\">\r\n                  <form\r\n                    [formGroup]=\"profileForm\"\r\n                    class=\"needs-validation user-add\"\r\n                    novalidate=\"\"\r\n                  >\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> First name</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control col-xl-5 col-md-7\"\r\n                        id=\"validationCustom0\"\r\n                        type=\"text\"\r\n                        required\r\n                        formControlName=\"firstName\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.firstName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.firstName.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.firstName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.firstName.errors?.required\r\n                          \"\r\n                        >\r\n                          This field is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> Last name</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control col-xl-5 col-md-7\"\r\n                        id=\"\"\r\n                        type=\"text\"\r\n                        formControlName=\"lastName\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.lastName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.lastName.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.lastName.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.lastName.errors?.required\r\n                          \"\r\n                        >\r\n                          Last name is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"validationCustom1\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> Email</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control col-xl-5 col-md-7\"\r\n                        id=\"validationCustom1\"\r\n                        type=\"text\"\r\n                        required=\"\"\r\n                        formControlName=\"email\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.email.touched || submitted) &&\r\n                            profileFormControl.email.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.email.touched || submitted) &&\r\n                            profileFormControl.email.errors?.required\r\n                          \"\r\n                        >\r\n                          This field is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                      <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                        ><span>*</span> Avatar</label\r\n                      >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        id=\"validationCustom2\"\r\n                        type=\"text\"\r\n                        required=\"\"\r\n                        formControlName=\"imageUrl\"\r\n                        hidden\r\n                        [ngClass]=\"{\r\n                          'is-invalid':\r\n                            (profileFormControl.imageUrl.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.imageUrl.errors?.required\r\n                        }\"\r\n                      />\r\n                      <div class=\"col-xl-5 col-md-7 p-0\">\r\n                        <app-upload-file\r\n                          [data]=\"modalFile\"\r\n                          [fileURL]=\"fileURL\"\r\n                          styleFile=\"width: 100% height: auto;\"\r\n                          (onChange)=\"onChangeData($event)\"\r\n                        ></app-upload-file>\r\n                      </div>\r\n                      <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                        <span\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            (profileFormControl.imageUrl.touched ||\r\n                              submitted) &&\r\n                            profileFormControl.imageUrl.errors?.required\r\n                          \"\r\n                        >\r\n                          This field is required\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-11\">\r\n                        <div class=\"row justify-content-between float-right\">\r\n                          <button\r\n                            *ngIf=\"update\"\r\n                            (click)=\"updateSwitch()\"\r\n                            class=\"btn btn-default\"\r\n                          >\r\n                            CANCEL\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-primary\"\r\n                            (click)=\"updateDetails()\"\r\n                          >\r\n                            SAVE\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-tab>\r\n            <ngb-tab>\r\n              <ng-template ngbTabTitle>\r\n                <i data-feather=\"settings\"></i> Change Password\r\n              </ng-template>\r\n              <ng-template ngbTabContent>\r\n                <form\r\n                  [formGroup]=\"passwordForm\"\r\n                  class=\"needs-validation user-add\"\r\n                  novalidate=\"\"\r\n                >\r\n                  <h5 class=\"f-w-600\">Change Password</h5>\r\n                  <div class=\"form-group row\">\r\n                    <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                      ><span>*</span> Password</label\r\n                    >\r\n                    <input\r\n                      class=\"form-control col-xl-5 col-md-7\"\r\n                      id=\"\"\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid':\r\n                          (passwordFormControl.password.touched || submitted) &&\r\n                          passwordFormControl.password.errors?.required\r\n                      }\"\r\n                    />\r\n                    <div class=\"invalid-feedback col-md-3 offset-md-4\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          (passwordFormControl.password.touched || submitted) &&\r\n                          passwordFormControl.password.errors?.required\r\n                        \"\r\n                      >\r\n                        This field is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row\">\r\n                    <label for=\"validationCustom1\" class=\"col-xl-3 col-md-4\"\r\n                      ><span>*</span> New Password</label\r\n                    >\r\n                    <input\r\n                      class=\"form-control col-xl-5 col-md-7\"\r\n                      id=\"validationCustom1\"\r\n                      type=\"password\"\r\n                      required=\"\"\r\n                      formControlName=\"newPassword\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid':\r\n                          (passwordFormControl.newPassword.touched ||\r\n                            submitted) &&\r\n                          passwordFormControl.newPassword.errors?.required\r\n                      }\"\r\n                    />\r\n                    <div class=\"invalid-feedback col-md-3 offset-md-4\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          (passwordFormControl.newPassword.touched ||\r\n                            submitted) &&\r\n                          passwordFormControl.newPassword.errors?.required\r\n                        \"\r\n                      >\r\n                        This field is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"form-group row\">\r\n                    <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                      ><span>*</span> Confirm New Password</label\r\n                    >\r\n                    <input\r\n                      class=\"form-control col-xl-5 col-md-7\"\r\n                      id=\"validationCustom2\"\r\n                      type=\"password\"\r\n                      required=\"\"\r\n                      formControlName=\"confirmNewPassword\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid':\r\n                          ((passwordFormControl.confirmNewPassword.touched ||\r\n                            submitted) &&\r\n                            passwordFormControl.confirmNewPassword.errors\r\n                              ?.required) ||\r\n                          (passwordFormControl.confirmNewPassword.value !==\r\n                            passwordFormControl.newPassword.value &&\r\n                            passwordFormControl.confirmNewPassword.value\r\n                              .length > 0)\r\n                      }\"\r\n                    />\r\n                    <div class=\"invalid-feedback col-md-7 offset-md-4\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          (passwordFormControl.confirmNewPassword.touched ||\r\n                            submitted) &&\r\n                          passwordFormControl.confirmNewPassword.errors\r\n                            ?.required\r\n                        \"\r\n                      >\r\n                        This field is required\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"invalid-feedback col-md-7 offset-md-4 d-block\">\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          passwordFormControl.confirmNewPassword.value !==\r\n                            passwordFormControl.newPassword.value &&\r\n                          passwordFormControl.confirmNewPassword.value\r\n                        \"\r\n                      >\r\n                        New password and Confirm new password are not the same\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-11\">\r\n                      <div class=\"row float-right\">\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-primary\"\r\n                          (click)=\"changePassword()\"\r\n                        >\r\n                          CHANGE PASSWORD\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </ng-template>\r\n            </ngb-tab>\r\n          </ngb-tabset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ProfileService } from 'src/app/lib/data/services/profiles/profile.service';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        Ng2SmartTableModule,\r\n        ProfileRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [ProfileSettingsComponent],\r\n    providers: [ProfileService]\r\n})\r\nexport class ProfilesModule { }\r\n"],"sourceRoot":"webpack:///"}